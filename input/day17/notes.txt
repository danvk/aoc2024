 0: 2,4 = bst = B=A%8
 2: 1,5 = bxl = B = B^5 
 4: 7,5 = cdv = C = floor(A / 2**B)
 6: 1,6 = bxl = B = B^6
 8: 0,3 = adv = A = floor(A / 2**3)
10: 4,3 = bxc = B = B ^ C
12: 5,5 = out = output(B % 8)
14: 3,0 = jnz = if A != 0 goto 0 else terminate

A = 34615120
{
  B = A
  B = B ^ 5
  C = floor(A / 2**B)
  B = B ^ 6
  A = floor(A / 2**3)
  B = B ^ C
  output(B % 8)
} while (A != 0)

# 0=adv/combo:   floor(A / 2**operand) -> A
# 1=bxl/literal: B ^ operand -> B
# 2=bst/combo:   operand % 8 -> B
# 3=jnz/literal: if A != 0 then jump to operand
# 4=bxc/ignore:  B ^ C -> B
# 5=out/combo:   output(operand % 8)
# 6=bdv/combo:   floor(A / 2**operand) -> B
# 7=cdv/combo:   floor(A / 2**operand) -> C

      0 -> operand
      1 -> operand
      2 -> operand
      3 -> operand
      4 -> state.a
      5 -> state.b
      6 -> state.c


Program: 2,4,1,5,7,5,1,6,0,3,4,3,5,5,3,0
16 digits -> 8^16 = 2^48 = too big to scan

001110 4
011110 6

   2   4   1   5   7   5   1   6   0   3   4   3   5   5   3   0
       001 110                 011 110 

001 110

001110 -> 4 2
001110 -> 4 2


001 100 001 001 -> [2, 4, 1, 2]
011 100 000 001 -> [2, 4, 1, 0]
011 100 001 001 -> [2, 4, 1, 0]
011 110 000 001 -> [2, 4, 6, 0]
100 010 011 011 -> [2, 4, 1, 5]
100 110 011 010 -> [2, 4, 1, 5]
100 111 011 010 -> [2, 4, 5, 5]
101 100 001 001 -> [2, 4, 1, 3]
111 100 000 001 -> [2, 4, 1, 5]
111 100 001 001 -> [2, 4, 1, 5]
111 110 000 001 -> [2, 4, 2, 5]

0o04233 -> [2, 4, 1, 5]
0o04632 -> [2, 4, 1, 5]
0o07401 -> [2, 4, 1, 5]
0o07411 -> [2, 4, 1, 5]
0o24632 -> [2, 4, 1, 5, 1]
0o44632 -> [2, 4, 1, 5, 5]
0o47401 -> [2, 4, 1, 5, 5]
0o47411 -> [2, 4, 1, 5, 5]
0o64632 -> [2, 4, 1, 5, 5]

0o1411 -> [2, 4, 1, 2]
0o3401 -> [2, 4, 1, 0]
0o3411 -> [2, 4, 1, 0]
0o4233 -> [2, 4, 1, 5]
0o4632 -> [2, 4, 1, 5]
0o5411 -> [2, 4, 1, 3]
0o7401 -> [2, 4, 1, 5]
0o7411 -> [2, 4, 1, 5]

[2, 4, 1, 5, 7, 5, 1, 6, 0, 3, 4, 3, 5, 5, 3, 0]
[2, 4, 1, 5, 7, 5, 1, 6, 0, 3, 4, 3, 5, 5, 3, 0]
